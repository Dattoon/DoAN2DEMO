@model WebHocTap.Web.ViewModels.Subject.LessonDetailVM

@{
    ViewData["Title"] = "Lesson";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var i = 0;
    var lessonId = Model.lessons.FirstOrDefault()?.Id ?? 0; // Lấy LessonId đầu tiên
    ViewBag.LessonId = lessonId; // Thiết lập LessonId trong ViewBag
}
<link href="~/clientLTE/css/lession.css" rel="stylesheet" />
<section id="main" style="padding-top:150px">
    <div class="container-lession">
        <div class="row-lession">

            <!-- Left Col -->
            <div class="leftcol-lession">
                <div class="card-lession">
                    <ul class="toc chapters">
                        <li class="heading">@Model.subject.NameSubject</li>
                        @foreach (var chapter in Model.chapters)
                        {
                            <li class="js-li"><a data-id="@chapter.Id" style="cursor:pointer" class="js-chapter">@chapter.NameChapter</a></li>
                        }
                    </ul>
                </div>
            </div>

            <!-- Mid Col -->
            <div class="midcol-lession js-content no-copy">
                @foreach (var lesson in Model.lessons)
                {
                    @Html.Raw(lesson.Content)
                }
                
              @*   <!-- form thêm bình luận -->
                <div>
                    @await component.invokeasync("addcomment", new { lessonid = viewbag.lessonid })
                </div>

                <!-- hiển thị bình luận -->
                <div id="commentssection">
                    @await component.invokeasync("comments", new { lessonid = viewbag.lessonid })
                </div> *@
            </div>

            <!-- Right Col -->
            <div class="rightcol-lession js-test">
                @if (Model.IsTest)
                {
                    <a asp-action="TestClient" asp-controller="SubjectClient" asp-route-id="@ViewBag.IdChapter">Bài kiểm tra</a>
                }
            </div>

        </div>
    </div>
</section>

@section styleclient {
    <style>
        body {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            -o-user-select: none;
            user-select: none;
        }
    </style>
}

@section scriptClient {
    <script type="text/JavaScript">
        function disableCopy(e) {
            return false;
        }
        function reEnable() {
            return true;
        }
        document.addEventListener('DOMContentLoaded', (event) => {
            const noCopyElements = document.querySelectorAll('.no-copy');
            noCopyElements.forEach(element => {
                element.oncontextmenu = function () { return false; };
                element.onselectstart = function () { return false; };
                element.onmousedown = function () { return false; };
            });
        });

        window.onload = function () {
            document.addEventListener("contextmenu", function (e) {
                nếu(e.target.closest('.no-copy')) {
                    e.prevent.preventDefault();
                }
            }, false);
            document.add.addEventListener("keydown", function (e) {
                nếu(e.ctrlKey và e.shiftKey và(e.keyCode == 73 hoặc e.keyCode == 74 hoặc e.keyCode == 85) ||
                    e.keyCode == 123 ||
                    (e.keyCode == 83 và(navigator.platform.match("Mac") ? e.metaKey : e.ctrlKey))) {
                nếu(e.target.closest('.no-copy')) {
                    disabledEvent(e);
                }
            }
        }, false);

        function disabledEvent(e) {
            e.stopPropagation();
            e.prevent.preventDefault();
            return false;
        }
                };
    </script>
    <script src="~/clientLTE/js/detaillesson.js" asp-append-version="true"></script>
}
